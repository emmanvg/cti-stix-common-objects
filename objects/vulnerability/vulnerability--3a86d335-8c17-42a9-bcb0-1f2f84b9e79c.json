{
    "type": "bundle",
    "id": "bundle--9e3c874d-7956-4a92-956e-f363e3f785b0",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3a86d335-8c17-42a9-bcb0-1f2f84b9e79c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-05-25T00:51:57.96142Z",
            "modified": "2022-05-25T00:51:57.96142Z",
            "name": "CVE-2022-29219",
            "description": "Lodestar is a TypeScript implementation of the Ethereum Consensus specification. Prior to version 0.36.0, there is a possible consensus split given maliciously-crafted `AttesterSlashing` or `ProposerSlashing` being included on-chain. Because the developers represent `uint64` values as native javascript `number`s, there is an issue when those variables with large (greater than 2^53) `uint64` values are included on chain. In those cases, Lodestar may view valid_`AttesterSlashing` or `ProposerSlashing` as invalid, due to rounding errors in large `number` values. This causes a consensus split, where Lodestar nodes are forked away from the main network. Similarly, Lodestar may consider invalid `ProposerSlashing` as valid, thus including in proposed blocks that will be considered invalid by the network. Version 0.36.0 contains a fix for this issue. As a workaround, use `BigInt` to represent `Slot` and `Epoch` values in `AttesterSlashing` and `ProposerSlashing` objects. `BigInt` is too slow to be used in all `Slot` and `Epoch` cases, so one may carefully use `BigInt` just where necessary for consensus.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-29219"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}