{
    "type": "bundle",
    "id": "bundle--253780f8-f19f-4e62-80f8-460d5b061e6e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--754bb804-9315-41e2-8f01-fd56dfd45ca6",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-05-02T00:46:59.295535Z",
            "modified": "2022-05-02T00:46:59.295535Z",
            "name": "CVE-2022-21230",
            "description": "This affects all versions of package org.nanohttpd:nanohttpd. Whenever an HTTP Session is parsing the body of an HTTP request, the body of the request is written to a RandomAccessFile when the it is larger than 1024 bytes. This file is created with insecure permissions that allow its contents to be viewed by all users on the host machine. **Workaround:** Manually specifying the -Djava.io.tmpdir= argument when launching Java to set the temporary directory to a directory exclusively controlled by the current user can fix this issue.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-21230"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}