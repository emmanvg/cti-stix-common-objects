{
    "type": "bundle",
    "id": "bundle--61695a66-81db-43ac-a2ea-7eccb3932ad9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--28835a88-8689-4725-a026-8af5b7be669d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-07-01T00:56:48.661422Z",
            "modified": "2022-07-01T00:56:48.661422Z",
            "name": "CVE-2013-4170",
            "description": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2013-4170"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}