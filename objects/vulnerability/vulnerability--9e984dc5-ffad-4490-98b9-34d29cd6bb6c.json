{
    "type": "bundle",
    "id": "bundle--d777cd1b-c4df-4599-a6b3-bcf905ea2d5d",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9e984dc5-ffad-4490-98b9-34d29cd6bb6c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-06-12T00:20:30.676277Z",
            "modified": "2021-06-12T00:20:30.676277Z",
            "name": "CVE-2021-22901",
            "description": "curl 7.75.0 through 7.76.1 suffers from a use-after-free vulnerability resulting in already freed memory being used when a TLS 1.3 session ticket arrives over a connection. A malicious server can use this in rare unfortunate circumstances to potentially reach remote code execution in the client. When libcurl at run-time sets up support for TLS 1.3 session tickets on a connection using OpenSSL, it stores pointers to the transfer in-memory object for later retrieval when a session ticket arrives. If the connection is used by multiple transfers (like with a reused HTTP/1.1 connection or multiplexed HTTP/2 connection) that first transfer object might be freed before the new session is established on that connection and then the function will access a memory buffer that might be freed. When using that memory, libcurl might even call a function pointer in the object, making it possible for a remote code execution if the server could somehow manage to get crafted memory content into the correct place in memory.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-22901"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}