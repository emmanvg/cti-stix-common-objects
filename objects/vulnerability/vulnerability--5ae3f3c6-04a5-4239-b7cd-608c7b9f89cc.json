{
    "type": "bundle",
    "id": "bundle--fc8e8723-e52b-4444-80b7-62f0019698e3",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--5ae3f3c6-04a5-4239-b7cd-608c7b9f89cc",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2021-09-22T00:27:18.794166Z",
            "modified": "2021-09-22T00:27:18.794166Z",
            "name": "CVE-2021-41087",
            "description": "in-toto-golang is a go implementation of the in-toto framework to protect software supply chain integrity. In affected versions authenticated attackers posing as functionaries (i.e., within a trusted set of users for a layout) are able to create attestations that may bypass DISALLOW rules in the same layout. An attacker with access to trusted private keys, may issue an attestation that contains a disallowed artifact by including path traversal semantics (e.g., foo vs dir/../foo). Exploiting this vulnerability is dependent on the specific policy applied. The problem has been fixed in version 0.3.0.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-41087"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}