{
    "type": "bundle",
    "id": "bundle--31ccc793-3f7e-41bc-be6f-e1fe6cb686ec",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--d16c76d8-d843-4ac0-8d1c-88e269c2c133",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-02-19T00:36:07.195305Z",
            "modified": "2022-02-19T00:36:07.195305Z",
            "name": "CVE-2022-23649",
            "description": "Cosign provides container signing, verification, and storage in an OCI registry for the sigstore project. Prior to version 1.5.2, Cosign can be manipulated to claim that an entry for a signature exists in the Rekor transparency log even if it doesn't. This requires the attacker to have pull and push permissions for the signature in OCI. This can happen with both standard signing with a keypair and \"keyless signing\" with Fulcio. If an attacker has access to the signature in OCI, they can manipulate cosign into believing the entry was stored in Rekor even though it wasn't. The vulnerability has been patched in v1.5.2 of Cosign. The `signature` in the `signedEntryTimestamp` provided by Rekor is now compared to the `signature` that is being verified. If these don't match, then an error is returned. If a valid bundle is copied to a different signature, verification should fail. Cosign output now only informs the user that certificates were verified if a certificate was in fact verified. There is currently no known workaround.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-23649"
                }
            ],
            "object_marking_refs": [
                "marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"
            ]
        }
    ]
}